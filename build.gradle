// Build library: gradlew build
// Install library locally for development with: gradlew install

plugins {
    id 'java'
    id 'maven'
    id 'com.enonic.defaults' version '1.0.3'
    id 'com.enonic.xp.app' version '1.2.0'
    id "com.moowork.node" version "1.1.1"
}

app {
    systemVersion = "${xpVersion}"
}

jar {
    baseName = "${projectName}"
}

dependencies {
    compile "com.enonic.xp:script-api:${xpVersion}"
    include "com.enonic.xp:lib-io:${xpVersion}"
    include "com.enonic.xp:lib-context:${xpVersion}"
    include "com.enonic.xp:lib-repo:${xpVersion}"
    include "com.enonic.xp:lib-node:${xpVersion}"
    compile "com.enonic.xp:core-api:${xpVersion}"
    include "com.enonic.xp:lib-portal:${xpVersion}"

    include 'com.enonic.lib:util:1.3.0'
    include 'com.enonic.lib:lib-cache:1.1.0'
    
    include group: 'org.jdom', name: 'jdom', version: '2.0.2'
    include group: 'org.json', name: 'json', version: '20180813'
    include group: 'jaxen', name: 'jaxen', version: '1.1.6'
    
    testCompile "com.enonic.xp:testing:${xpVersion}"
}


repositories {
    xp.enonicRepo()
    mavenLocal()
    jcenter()
}

npmInstall.inputs.file("package.json")
npmInstall.inputs.file("package-lock.json")
npmInstall.outputs.dir("node_modules")


task babelXP(type: NodeTask) {
    script = file('node_modules/babel-cli/bin/babel.js')
    args = ["src/main/resources", "--out-dir", "build/resources/main"]

    inputs.dir 'src/main/resources'
    outputs.dir("build/resources/main")
}
babelXP.dependsOn += 'processResources'
babelXP.dependsOn += 'npmInstall'

def ROOT = new File("").absolutePath + "/"

task nashornPolyfills(type: NodeTask) {
    script = file('node_modules/webpack/bin/webpack.js')
    args = [
            '--config', 'node_modules/react4xp-runtime-nashornpolyfills/webpack.config.js',
            '--env.SOURCE=' + ROOT + 'node_modules/react4xp-runtime-nashornpolyfills/nashornPolyfills.es6',
            '--env.BUILD_R4X=' + ROOT + 'build/resources/main/lib/enonic/react4xp/fallback',
            '--env.NASHORNPOLYFILLS_FILENAME=react4xp-runtime-nashornpolyfills'
    ]
}
nashornPolyfills.dependsOn += 'babelXP'

task client(type: NodeTask) {
    script = file('node_modules/webpack/bin/webpack.js')
    args = [
            '--config', 'node_modules/react4xp-runtime-client/webpack.config.js',
            '--env.BUILD_R4X=' + ROOT + 'build/resources/main/services/react4xp-client',
            '--env.BUILD_ENV=production',
            '--env.CHUNK_CONTENTHASH=[name].js',
            '--env.CLIENT_CHUNKS_FILENAME=__delete_me_im_redundant__',

            // Placeholders used in services/react4xp-client/react4xp-client.es6. Keep up to date!
            '--env.LIBRARY_NAME=__REACT4XP__RUNTIME__CLIENT__LIBRARY_NAME__PLACEHOLDER__',
            '--env.SERVICE_ROOT_URL=__REACT4XP__RUNTIME__CLIENT__SERVICE_ROOT_URL__PLACEHOLDER__'
    ]

    doLast {
        def f = new File(ROOT + 'build/resources/main/services/react4xp-client/__delete_me_im_redundant__')
        f.delete()
    }
}
client.dependsOn += 'babelXP'



jar.dependsOn += 'nashornPolyfills'
jar.dependsOn += 'client'
jar.outputs.dir('build/libs')
