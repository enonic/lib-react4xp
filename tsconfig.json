{ // https://www.typescriptlang.org/tsconfig
	// This file is mainly for letting your code editor use typings.
	// It's also used when doing a simple yarn tsc, to check all files.
	// Rollup overrides some of these options when doing the actual build.
	"compilerOptions": {
		//──────────────────────────────────────────────────────────────────────
		// Type Checking
		//──────────────────────────────────────────────────────────────────────
		"noImplicitAny": false,
		"noPropertyAccessFromIndexSignature": true,
		"noUncheckedIndexedAccess": true,
		"noUnusedLocals": false,
		"noUnusedParameters": true,

		// When strictNullChecks is false, null and undefined are effectively
		// ignored by the language. This can lead to unexpected errors at
		// runtime.
		// When strictNullChecks is true, null and undefined have their own
		// distinct types and you’ll get a type error if you try to use them
		// where a concrete value is expected.
		// NOTE: Setting it to true gives errors which are NOT really errors in lib/xp/node.ts
		"strictNullChecks": false,

		//──────────────────────────────────────────────────────────────────────
		// Modules
		//──────────────────────────────────────────────────────────────────────
		// When set to true, allowUmdGlobalAccess lets you access UMD exports as
		// globals from inside module files. A module file is a file that has
		// imports and/or exports. Without this flag, using an export from a UMD
		// module requires an import declaration.
		// An example use case for this flag would be a web project where you
		// know the particular library (like jQuery or Lodash) will always be
		// available at runtime, but you can’t access it with an import.
		"allowUmdGlobalAccess": true,

		"baseUrl": "./",

		"module": "esnext", // What rollup wants
		// "module": "CommonJS", // When no longer using rollup, just tsup?

		"moduleResolution": "node",
		"paths": {
			// Development (should be commented out when commiting)
			// "@enonic-types/core": ["../../enonic/xp/modules/core/index.ts"],
			// "@enonic-types/lib-content": ["../../enonic/xp/modules/lib/lib-content/src/main/resources/lib/xp/content.ts"],
			// "@enonic-types/lib-io": ["../../enonic/xp/modules/lib/lib-io/src/main/resources/lib/xp/io.ts"],
			// "@enonic-types/lib-node": ["../../enonic/xp/modules/lib/lib-node/src/main/resources/lib/xp/node.ts"],
			// "@enonic-types/lib-portal": ["../../enonic/xp/modules/lib/lib-portal/src/main/resources/lib/xp/portal.ts"],
			// // "node_modules/@enonic-types/core/index.d.ts": ["../../enonic/xp/modules/core/index.ts"],
			// "/lib/xp/content": ["../../enonic/xp/modules/lib/lib-content/src/main/resources/lib/xp/content.ts"],
			// "/lib/xp/io": ["../../enonic/xp/modules/lib/lib-io/src/main/resources/lib/xp/io.ts"],
			// "/lib/xp/node": ["../../enonic/xp/modules/lib/lib-node/src/main/resources/lib/xp/node.ts"],
			// "/lib/xp/portal": ["../../enonic/xp/modules/lib/lib-portal/src/main/resources/lib/xp/portal.ts"],

			// A series of entries which re-map imports to lookup locations relative to the baseUrl.
			// In order to get all of the correct typing in your favourite editor.
			// yarn tsc doesn't change the import/require paths based on this
			"@enonic/react4xp": ["./node_modules/@enonic/react4xp/src"],
			"@enonic/react4xp/*": ["./node_modules/@enonic/react4xp/src/*"],

			"/lib/enonic/react4xp/*": ["./src/main/resources/lib/enonic/react4xp/*"],
			"/lib/xp/*": ["node_modules/@enonic-types/lib-*"],
			"/*": ["./src/main/resources/*"],
		},
		"resolveJsonModule": true,
		"rootDir": "./",
		// "rootDir": "../..",
		"rootDirs": [
			"./src/main/resources",
			"./node_modules"
		],
		// "typeRoots": [
		// 	"node_modules/@types",
		// 	"node_modules/@enonic-types"
		// ],
		"types": [
			//"@enonic-types/env-nashorn",
			"@enonic-types/global",
		],

		//──────────────────────────────────────────────────────────────────────
		// Emit
		//──────────────────────────────────────────────────────────────────────
		"declaration": false,
		"downlevelIteration": true,
		"importHelpers": true,
		"importsNotUsedAsValues": "remove",
		"inlineSourceMap": false,
		"inlineSources": false,
		"outDir": "build/tsc", // This is just for a simple yarn tsc command, rollup overrides this to build/resources/main
		"removeComments": true,
		"sourceMap": false,

		//──────────────────────────────────────────────────────────────────────
		// JavaScript Support
		//──────────────────────────────────────────────────────────────────────
		"allowJs": true,

		//──────────────────────────────────────────────────────────────────────
		// Interop Constraints
		//──────────────────────────────────────────────────────────────────────
		"allowSyntheticDefaultImports": true,
		"esModuleInterop": true,

		//──────────────────────────────────────────────────────────────────────
		// Language and Environment
		//──────────────────────────────────────────────────────────────────────
		"experimentalDecorators": true,
		"lib": [
			"DOM", // HTMLElement
			"ES2015"
		],
		// tsup Warning Unrecognized target environment "ES3"
		// tsup CJS Build failed Error: Invalid target "es3" in "--target=es3"
		// "target": "ES3",
		// tsup ERROR Transforming const to the configured target environment ("ES5") is not supported yet
		// "target": "ES5",
		// NOTE: target is set in tsup.config.ts instead

		//──────────────────────────────────────────────────────────────────────
		// Compiler Diagnostics
		//──────────────────────────────────────────────────────────────────────
		"listEmittedFiles": false,
		"listFiles": false,

		//──────────────────────────────────────────────────────────────────────
		// Completeness
		//──────────────────────────────────────────────────────────────────────
		// Even though the setting disables type checking for d.ts files,
		// TypeScript still type checks the code you specifically
		// refer to in your application's source code.
		"skipLibCheck": true, // Disable type checking for node_modules
	},
	"exclude": [
		// This will exclude src/main/resources/index.d.ts which we might want!
		// "**/*.d.ts",
		"src/main/resources/assets/**/*.*",
	],
	"include": [
		"src/main/resources/index.d.ts",
		"src/main/resources/**/*.ts",
	// 	"node_modules/@enonic/react4xp/**/*.ts",
	// 	"node_modules/@enonic/js-utils/**/*.ts"
	]
}
